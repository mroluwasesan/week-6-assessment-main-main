name: Build, Test & Deploy

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  DOCKER_COMPOSE_FILE: docker-compose.yml
  ATLAS_URI: ${{ secrets.ATLAS_URI }}  # MongoDB Atlas connection string

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/backend:latest
          build-args: |
            ATLAS_URI=${{ secrets.ATLAS_URI }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run tests
        run: |
          docker-compose -f $DOCKER_COMPOSE_FILE up -d
          docker-compose exec backend npm test
          docker-compose exec frontend npm test

  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to production
        run: |
          # Add your deployment commands here (e.g., SSH to server)
          echo "Deployment would happen here"
          # Example for Render.com:
          # curl -X POST \
          #   -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          #   https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys





name: Deploy to Render

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  RENDER_SERVICE_NAME: "your-app-name"  # Replace with your Render service name
  DOCKER_COMPOSE_FILE: "docker-compose.render.yml" # Special compose file for Render

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/backend:latest
          build-args: |
            ATLAS_URI=${{ secrets.ATLAS_URI }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Render
        uses: render-actions/deploy@v1
        with:
          serviceId: ${{ secrets.RENDER_SERVICE_ID }}
          apiKey: ${{ secrets.RENDER_API_KEY }}
          dockerComposeFile: ${{ env.DOCKER_COMPOSE_FILE }}